@model MicroserviceECommerce.MVCUI.Models.CustomersModel

@{
    ViewBag.Title = "UpdateCustomer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("PostCustomer", "Customers", FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("Company Name")
        @Html.TextBoxFor(x => x.CompanyName, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Contact Name")
        @Html.TextBoxFor(x => x.ContactName, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Contact Title")
        @Html.TextBoxFor(x => x.ContactTitle, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Address")
        @Html.TextBoxFor(x => x.Address, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("City")
        @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Region")
        @Html.TextBoxFor(x => x.Region, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Postal Code")
        @Html.TextBoxFor(x => x.PostalCode, new { @class = "form-control"})
    </div>
    <div class="form-group">
        @Html.Label("Phone")
        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Fax")
        @Html.TextBoxFor(x => x.City, new { @class = "form-control" ,type="number"})
    </div>
    <div class="form-group">
        @Html.Label("Password")
        @Html.TextBoxFor(x => x.Password, new { @class = "form-control" ,type="password"})
    </div>
    <div class="form-group">
        @Html.Label("Country")
        @Html.TextBoxFor(x => x.Country, new { @class = "form-control" })
    </div>

    @Html.HiddenFor(x => x.CustomerID)
    <button class="btn btn-primary" type="submit">Güncelle</button>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
